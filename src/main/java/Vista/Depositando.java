/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Control.ConfigControl;
import Control.FicheroControl;
import Control.RestControl;
import Control.StardogControl;
import Modelo.BitstreamsRest;
import Modelo.ColeccionRest;
import Modelo.ComunidadRest;
import Modelo.ItemRest;
import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreePath;

/**
 *
 * @author Pogliani, German.
 */
public class Depositando extends javax.swing.JFrame {

    ComunidadRest comunidad = null;
    ColeccionRest coleccion = null;
    ItemRest item = null;
    DefaultListModel misMetadatos = new DefaultListModel();

    public Depositando() {
        initComponents();
        this.setTitle("Depósito y recuperación de ítems.");
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        //this.setVisible(true);
        captura.getVerticalScrollBar().setUnitIncrement(18);
        //
        //Configurando win = new Configurando(this, true);
        //win.setConsola(taConsola);
        //win.setVisible(true);

        ConfigControl config = null;
        try {
            config = ConfigControl.getInstancia();
            config.getConfigInicio();
            config.setup_stardog();
            config.setup_dspace();
            config.setup_general();
        } catch (IOException ex) {
            Logger.getLogger(Depositando.class.getName()).log(Level.SEVERE, null, ex);
        }
        taConsola.append(">> Conectando con los servicio.\n");
        try {
            // rest api                
            RestControl rest = RestControl.getInstancia();            
            if (rest.conectar()){ // no hace falta consulta el estatus.
                taConsola.append("Servicio DSpace: OK!.\n");
                rest.estructuraRepositorio(taConsola, jTree1);
            } else {
                taConsola.append("Servicio DSpace: DOWN!.\n");

            }
            // stardog
            StardogControl baseGrafica = StardogControl.getInstancia();
            baseGrafica.conectar();
            if (baseGrafica.estatus()) {
                taConsola.append("Servicio StarDog: OK!.\n");
                baseGrafica.obtenerObjetosAprendizaje(taConsola, listaOA);
            } else {
                taConsola.append("Servicio StarDog: DOWN!.\n");
            }
        } catch (Exception ex) {
            Logger.getLogger(Depositando.class.getName()).log(Level.SEVERE, null, ex);
        }        
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        miMenu = new javax.swing.JPopupMenu();
        mnuRefrescar = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        mnuNewComunidad = new javax.swing.JMenuItem();
        mnuDeleteComunidad = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        mnuNewColeccion = new javax.swing.JMenuItem();
        mnuDeleteColeccion = new javax.swing.JMenuItem();
        panel_superior = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        panel_inferior = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        cbOpcion = new javax.swing.JComboBox<>();
        btnDepositar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        panel_central = new javax.swing.JPanel();
        panelSur = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        jLabel26 = new javax.swing.JLabel();
        jPanel16 = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        taConsola = new javax.swing.JTextArea();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaOA = new javax.swing.JList<>();
        jPanel18 = new javax.swing.JPanel();
        btnObtenerMetas = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        listaMetadato = new javax.swing.JList<>();
        jPanel14 = new javax.swing.JPanel();
        btnAgregarMetadato = new javax.swing.JButton();
        btnRestablecerMetas = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        captura = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        jPanel17 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        btnObtenerItems = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        listaItems = new javax.swing.JList<>();
        jScrollPane6 = new javax.swing.JScrollPane();
        listaBitstreams = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        listaRecursos = new javax.swing.JList<>();
        jPanel13 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        btnAddFichero = new javax.swing.JButton();
        btnDelFichero = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        mnuTool = new javax.swing.JMenu();
        mnuConectar = new javax.swing.JMenuItem();
        mnuFiltrar = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        mnuSalir = new javax.swing.JMenuItem();

        mnuRefrescar.setText("Refrescar");
        miMenu.add(mnuRefrescar);
        miMenu.add(jSeparator2);

        mnuNewComunidad.setText("Crear Comunidad");
        miMenu.add(mnuNewComunidad);

        mnuDeleteComunidad.setText("Eliminar Comunidad");
        miMenu.add(mnuDeleteComunidad);
        miMenu.add(jSeparator3);

        mnuNewColeccion.setText("Crear Colección");
        miMenu.add(mnuNewColeccion);

        mnuDeleteColeccion.setText("Eliminar Colección");
        miMenu.add(mnuDeleteColeccion);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panel_superior.setBackground(new java.awt.Color(0, 153, 204));
        panel_superior.setLayout(new java.awt.BorderLayout());

        jPanel1.setBackground(new java.awt.Color(0, 153, 204));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jLabel2.setText("          ");
        jPanel1.add(jLabel2, java.awt.BorderLayout.WEST);

        jLabel4.setText("       ");
        jPanel1.add(jLabel4, java.awt.BorderLayout.LINE_END);

        jLabel14.setFont(new java.awt.Font("Verdana", 1, 16)); // NOI18N
        jLabel14.setText(">> Envío de ítems.");
        jPanel1.add(jLabel14, java.awt.BorderLayout.CENTER);

        panel_superior.add(jPanel1, java.awt.BorderLayout.CENTER);

        getContentPane().add(panel_superior, java.awt.BorderLayout.PAGE_START);

        panel_inferior.setBackground(new java.awt.Color(0, 153, 204));
        panel_inferior.setLayout(new java.awt.BorderLayout());

        jLabel5.setText("   ");
        panel_inferior.add(jLabel5, java.awt.BorderLayout.LINE_END);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 5)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("          ");
        panel_inferior.add(jLabel6, java.awt.BorderLayout.PAGE_START);

        jLabel7.setText("          ");
        panel_inferior.add(jLabel7, java.awt.BorderLayout.LINE_START);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 3)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("          ");
        panel_inferior.add(jLabel8, java.awt.BorderLayout.PAGE_END);

        jPanel3.setBackground(new java.awt.Color(255, 51, 51));
        jPanel3.setOpaque(false);
        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT, 10, 10));

        cbOpcion.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cbOpcion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Crear ítem", "Enviar metadatos", "Enviar bitstreams", "Eliminar ítem", "Eliminar metadato", "Eliminar bitstreams", "Modificar metadato" }));
        cbOpcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbOpcionActionPerformed(evt);
            }
        });
        jPanel3.add(cbOpcion);

        btnDepositar.setForeground(new java.awt.Color(51, 102, 0));
        btnDepositar.setText("Depositar");
        btnDepositar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDepositarActionPerformed(evt);
            }
        });
        jPanel3.add(btnDepositar);

        btnSalir.setForeground(new java.awt.Color(255, 0, 0));
        btnSalir.setText("Cancelar");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        jPanel3.add(btnSalir);

        panel_inferior.add(jPanel3, java.awt.BorderLayout.CENTER);

        getContentPane().add(panel_inferior, java.awt.BorderLayout.PAGE_END);

        panel_central.setLayout(new java.awt.BorderLayout());

        panelSur.setLayout(new java.awt.BorderLayout());

        jPanel15.setBackground(new java.awt.Color(204, 255, 204));
        jPanel15.setLayout(new java.awt.GridLayout(7, 0));

        jLabel26.setText("          ");
        jPanel15.add(jLabel26);

        panelSur.add(jPanel15, java.awt.BorderLayout.WEST);

        jPanel16.setLayout(new java.awt.GridLayout(5, 0));

        jLabel27.setText("          ");
        jPanel16.add(jLabel27);

        panelSur.add(jPanel16, java.awt.BorderLayout.LINE_END);

        jScrollPane8.setPreferredSize(new java.awt.Dimension(166, 130));

        taConsola.setEditable(false);
        taConsola.setBackground(new java.awt.Color(255, 204, 153));
        taConsola.setColumns(20);
        taConsola.setRows(5);
        jScrollPane8.setViewportView(taConsola);

        panelSur.add(jScrollPane8, java.awt.BorderLayout.CENTER);

        panel_central.add(panelSur, java.awt.BorderLayout.SOUTH);

        jPanel4.setPreferredSize(new java.awt.Dimension(300, 281));
        jPanel4.setLayout(new java.awt.BorderLayout());

        jPanel5.setLayout(new java.awt.GridLayout(0, 3, 4, 5));
        jPanel4.add(jPanel5, java.awt.BorderLayout.PAGE_END);

        jPanel6.setLayout(new java.awt.BorderLayout());

        jLabel12.setText("  ");
        jPanel6.add(jLabel12, java.awt.BorderLayout.PAGE_END);

        jPanel7.setLayout(new javax.swing.BoxLayout(jPanel7, javax.swing.BoxLayout.Y_AXIS));

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("Objetos de Aprendizajes"));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(300, 103));

        listaOA.setBackground(new java.awt.Color(240, 240, 240));
        listaOA.setVisibleRowCount(5);
        listaOA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaOAMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                listaOAMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(listaOA);

        jPanel7.add(jScrollPane1);

        jPanel18.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        btnObtenerMetas.setText("Obtener Metadatos para el O.A. seleccionado");
        btnObtenerMetas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObtenerMetasActionPerformed(evt);
            }
        });
        jPanel18.add(btnObtenerMetas);

        jPanel7.add(jPanel18);

        jScrollPane7.setBorder(javax.swing.BorderFactory.createTitledBorder("Metadatos"));

        listaMetadato.setBackground(new java.awt.Color(240, 240, 240));
        listaMetadato.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        listaMetadato.setOpaque(false);
        listaMetadato.setVisibleRowCount(5);
        jScrollPane7.setViewportView(listaMetadato);

        jPanel7.add(jScrollPane7);

        jPanel14.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        btnAgregarMetadato.setText("Describir Metadato");
        btnAgregarMetadato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarMetadatoActionPerformed(evt);
            }
        });
        jPanel14.add(btnAgregarMetadato);

        btnRestablecerMetas.setText("Restablecer selección");
        btnRestablecerMetas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRestablecerMetasActionPerformed(evt);
            }
        });
        jPanel14.add(btnRestablecerMetas);

        jPanel7.add(jPanel14);

        jPanel6.add(jPanel7, java.awt.BorderLayout.WEST);

        jPanel8.setLayout(new java.awt.BorderLayout());

        jLabel20.setText("     ");
        jPanel8.add(jLabel20, java.awt.BorderLayout.WEST);

        captura.setBackground(new java.awt.Color(204, 204, 255));
        captura.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Describir el Ítem"));
        captura.setToolTipText("");
        captura.setMaximumSize(new java.awt.Dimension(33, 44));
        jPanel8.add(captura, java.awt.BorderLayout.CENTER);

        jPanel6.add(jPanel8, java.awt.BorderLayout.CENTER);

        jPanel4.add(jPanel6, java.awt.BorderLayout.CENTER);

        panel_central.add(jPanel4, java.awt.BorderLayout.CENTER);

        jPanel2.setBackground(new java.awt.Color(204, 255, 204));
        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.LINE_AXIS));

        jLabel15.setText("          ");
        jPanel2.add(jLabel15);

        panel_central.add(jPanel2, java.awt.BorderLayout.WEST);

        jPanel9.setLayout(new java.awt.BorderLayout());

        jPanel12.setLayout(new javax.swing.BoxLayout(jPanel12, javax.swing.BoxLayout.LINE_AXIS));

        jLabel9.setText("          ");
        jPanel12.add(jLabel9);

        jPanel9.add(jPanel12, java.awt.BorderLayout.CENTER);

        panel_central.add(jPanel9, java.awt.BorderLayout.EAST);

        jPanel10.setPreferredSize(new java.awt.Dimension(800, 130));
        jPanel10.setLayout(new java.awt.BorderLayout());

        jLabel11.setBackground(new java.awt.Color(204, 255, 204));
        jLabel11.setText("          ");
        jLabel11.setOpaque(true);
        jPanel10.add(jLabel11, java.awt.BorderLayout.LINE_START);

        jPanel11.setLayout(new java.awt.GridLayout(0, 7, 5, 0));

        jScrollPane5.setBorder(javax.swing.BorderFactory.createTitledBorder("Estructura del Repositorio"));
        jScrollPane5.setPreferredSize(new java.awt.Dimension(89, 125));

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Repositorio");
        jTree1.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jTree1.setComponentPopupMenu(miMenu);
        jTree1.setVisibleRowCount(7);
        jTree1.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                jTree1ValueChanged(evt);
            }
        });
        jScrollPane5.setViewportView(jTree1);

        jPanel11.add(jScrollPane5);

        jPanel17.setMinimumSize(new java.awt.Dimension(60, 100));
        jPanel17.setPreferredSize(new java.awt.Dimension(50, 100));
        jPanel17.setLayout(new java.awt.GridLayout(5, 2, 5, 5));
        jPanel17.add(jLabel13);

        btnObtenerItems.setText("Extraer los ítems");
        btnObtenerItems.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObtenerItemsActionPerformed(evt);
            }
        });
        jPanel17.add(btnObtenerItems);

        jPanel11.add(jPanel17);

        jScrollPane4.setBorder(javax.swing.BorderFactory.createTitledBorder("ítems"));

        listaItems.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Items" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listaItems.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                listaItemsMousePressed(evt);
            }
        });
        jScrollPane4.setViewportView(listaItems);

        jPanel11.add(jScrollPane4);

        jScrollPane6.setBorder(javax.swing.BorderFactory.createTitledBorder("Recursos presentes"));

        listaBitstreams.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Bitstreams" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane6.setViewportView(listaBitstreams);

        jPanel11.add(jScrollPane6);

        jScrollPane3.setBorder(javax.swing.BorderFactory.createTitledBorder("Recursos"));

        listaRecursos.setBackground(new java.awt.Color(240, 240, 240));
        listaRecursos.setOpaque(false);
        listaRecursos.setVisibleRowCount(5);
        jScrollPane3.setViewportView(listaRecursos);

        jPanel11.add(jScrollPane3);

        jPanel13.setLayout(new java.awt.GridLayout(5, 1, 5, 5));

        jLabel17.setText("  ");
        jPanel13.add(jLabel17);

        btnAddFichero.setText("Agregar Recurso");
        btnAddFichero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddFicheroActionPerformed(evt);
            }
        });
        jPanel13.add(btnAddFichero);

        btnDelFichero.setText("Quitar Recurso");
        btnDelFichero.setEnabled(false);
        btnDelFichero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelFicheroActionPerformed(evt);
            }
        });
        jPanel13.add(btnDelFichero);

        jLabel16.setText("  ");
        jPanel13.add(jLabel16);

        jPanel11.add(jPanel13);

        jPanel10.add(jPanel11, java.awt.BorderLayout.CENTER);

        panel_central.add(jPanel10, java.awt.BorderLayout.NORTH);

        getContentPane().add(panel_central, java.awt.BorderLayout.CENTER);

        mnuTool.setText("Herramienta");

        mnuConectar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        mnuConectar.setText("Preferencias");
        mnuConectar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuConectarActionPerformed(evt);
            }
        });
        mnuTool.add(mnuConectar);

        mnuFiltrar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        mnuFiltrar.setText("Búsqueda de ítems");
        mnuFiltrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuFiltrarActionPerformed(evt);
            }
        });
        mnuTool.add(mnuFiltrar);
        mnuTool.add(jSeparator1);

        mnuSalir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, 0));
        mnuSalir.setText("Salir");
        mnuSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuSalirActionPerformed(evt);
            }
        });
        mnuTool.add(mnuSalir);

        jMenuBar1.add(mnuTool);

        setJMenuBar(jMenuBar1);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void mnuSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuSalirActionPerformed
        this.setVisible(false);
        System.exit(0);
    }//GEN-LAST:event_mnuSalirActionPerformed

    private void mnuConectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuConectarActionPerformed
        Configurando win = new Configurando(this, true);
        win.setConsola(taConsola);
        win.setVisible(true);
        try {
            // Rest api
            // obtenemos la estructura del repositorio en cuestion.
            RestControl rest = RestControl.getInstancia();
            if (rest.estatus()) {
                // Limpiamos
                listaRecursos.setModel(new DefaultListModel<>());
                listaRecursos.updateUI();
                jTree1.setModel(new DefaultTreeModel(new DefaultMutableTreeNode("Repositorio")));
                jTree1.updateUI();
                rest.estructuraRepositorio(taConsola, jTree1);
            } else {
                taConsola.append("Sin servicio de Sotardog.\n");
            }
            //
            // Stardog
            StardogControl baseGrafica = StardogControl.getInstancia();
            if (baseGrafica.estatus()) {
                // Limpiamos                 
                listaOA.setModel(new DefaultListModel<>());
                listaOA.updateUI();
                listaMetadato.setModel(new DefaultListModel<>());
                //listaMetadato.updateUI();
                captura.getViewport().removeAll();
                //captura.updateUI();
                // Obtenemos la lista de metadatos.
                baseGrafica.obtenerObjetosAprendizaje(taConsola, listaOA);
            } else {
                taConsola.append("Sin servicio de DSpace\n");
            }
        } catch (Exception ex) {
            Logger.getLogger(Depositando.class.getName()).log(Level.SEVERE, null, ex);
        }
        win.dispose();
    }//GEN-LAST:event_mnuConectarActionPerformed

    private void limpiarComponentes() {
        this.coleccion = null;
        // Recursos.
        this.listaRecursos.setModel(new DefaultListModel<>());
        this.btnAddFichero.setEnabled(true);
        this.btnDelFichero.setEnabled(false);
        // Objetos de aprendizaje.
        this.listaOA.setModel(new DefaultListModel<>());
        this.listaOA.setEnabled(false);
        // This.listaRecursos.setModel(new DefaultListModel<>());        
        this.listaMetadato.setModel(new DefaultListModel<>());
        this.listaMetadato.setEnabled(false);
        // cleaning consola
        //this.taConsola.setEnabled(false);
        this.taConsola.setEditable(false);
        this.taConsola.setText("");
    }

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        this.setVisible(false);
        System.exit(0);
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnAddFicheroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddFicheroActionPerformed
        try {
            FicheroControl fichero = FicheroControl.getInstancia();
            fichero.getFileChooser(this);
            listaRecursos.setModel(fichero.getListaFicheros());
            //((DefaultListModel) listaRecursos.getModel()).addElement(fichero.get);
            if (listaRecursos.getModel().getSize() > 0) {
                if (!listaOA.isEnabled()) {
                    listaOA.setEnabled(true);
                }
                btnDelFichero.setEnabled(true);
            } else {
                listaOA.setEnabled(false);
                btnDelFichero.setEnabled(false);
            }
        } catch (IOException ex) {
            Logger.getLogger(Depositando.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAddFicheroActionPerformed

    private void btnDelFicheroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelFicheroActionPerformed
        try {
            FicheroControl fichero = FicheroControl.getInstancia();
            if (fichero.getListaFicheros().size() > 0) {
                fichero.quitarFichero(listaRecursos.getSelectedIndex());
                if (fichero.getListaFicheros().size() == 0) {
                    btnDelFichero.setEnabled(false);
                }
            } else {
                btnDelFichero.setEnabled(false);
            }
        } catch (Exception ex) {
            Logger.getLogger(Depositando.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnDelFicheroActionPerformed

    private void btnDepositarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDepositarActionPerformed
        try {
            StardogControl base = StardogControl.getInstancia();
            // Se valida si hay coleccion seleccionada, recursos seleccionados y 
            // los metadatos no tengan errores.
            int opcion = cbOpcion.getSelectedIndex();
            if (opcion < 0) {
                return;
            }
            opcion += 1;
            switch (opcion) {
                case 1:
                    String msg = "";
                    String msg_inicial = "Verifique por favor: \n";
                    if (this.coleccion == null) {
                        msg = msg + "La selección de la Colección.\n";
                    }
                    if (listaRecursos.getModel().getSize() == 0) {
                        msg = msg + "La selección de los recursos.\n";
                    }
                    if (base.validarMetadatos_v2()) {
                        msg = msg + "Ingresado los metadatos y no tenga errores [Rótulos en rojo]. \n";
                    }
                    //| (base.isErrorValidacion())) {
                    if (!msg.isEmpty()) {
                        msg = msg_inicial + msg;
                        JOptionPane.showMessageDialog(this, msg, "Información", JOptionPane.INFORMATION_MESSAGE);
                        return;
                    }
                    // Le damos formato json a los metadatos
                    base.jsonMetadatos();
                    break;
                case 2:                    
                    break;
                case 3:
                    break;
                case 4:
                    if (listaItems.getSelectedIndex() < 0) {
                        JOptionPane.showMessageDialog(this,
                                "Seleccione algun item!.",
                                "Informe", JOptionPane.INFORMATION_MESSAGE);
                        return;
                    } else {
                        item = (ItemRest) ((Object) listaItems.getSelectedValue());
                    }
                    break;
                case 5:
                    return;
                case 7:
                    base.jsonMetadatosSinBitstreams();
                    taConsola.append("Archivo de metadatos para modificar generados.\n");
                    return;
                default:
                    break;
            }

            // creamos el archivo json con los metadatos            
            //
            // depositamos los recursos.
            RestControl repo = RestControl.getInstancia();
            //if (repositorio.enviarItem(coleccion, evt, taConsola)) {
            //    this.limpiarComponentes();
            //}
            // nuevo
            if (repo.protocoloRest(opcion, evt, coleccion, item, new BitstreamsRest(), taConsola)) {
                //limpiarComponentes();
            }
        } catch (Exception ex) {
            //Logger.getLogger(Depositando.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Error al depositar.\n" + ex.getMessage(), "Informe", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnDepositarActionPerformed

    private void btnAgregarMetadatoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarMetadatoActionPerformed
        try {
            List objeto = listaMetadato.getSelectedValuesList();
            if (objeto.isEmpty()) {
                return;
            }
            //
            Object[] options = {"OK", "CANCELAR"};
            int result = JOptionPane.showOptionDialog(this,
                    "Desea agregar este metadato a la lista",
                    "Lo agregamos?",
                    JOptionPane.DEFAULT_OPTION,
                    JOptionPane.QUESTION_MESSAGE, null,
                    options,
                    options[0]);
            if (result == 1) {
                return;
            }
            //            
            StardogControl baseGrafica = StardogControl.getInstancia();
            final JPanel aJp = baseGrafica.setPanelCaptura(objeto);
            captura.getViewport().setView(aJp);
            //
            taConsola.append("Operación finalizada. Se agregó " + objeto.size() + " metadato.\n");
        } catch (Exception ex) {
            Logger.getLogger(Depositando.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAgregarMetadatoActionPerformed

    private void listaOAMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaOAMousePressed

    }//GEN-LAST:event_listaOAMousePressed

    private void jTree1ValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_jTree1ValueChanged
        TreePath path = evt.getPath();
        Object[] nodos = path.getPath();

        // Obtener el ultimo nodo seleccionado.
        DefaultMutableTreeNode ultimoNodo
                = (DefaultMutableTreeNode) nodos[nodos.length - 1];

        // Preguntamos si es una coleccion y la devolvemos.
        if (ultimoNodo.isLeaf() && ultimoNodo.getUserObject() instanceof ColeccionRest) {
            this.coleccion = (ColeccionRest) ultimoNodo.getUserObject();
        } else {
            this.coleccion = null;
        }
    }//GEN-LAST:event_jTree1ValueChanged

    private void mnuFiltrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuFiltrarActionPerformed
        try {
            RestControl repo = RestControl.getInstancia();
            StardogControl base = StardogControl.getInstancia();
            if ((repo.getModeloRepo() == null)
                    && base.getListaMetadados().getSize() == 0) {
                JOptionPane.showMessageDialog(this, "La Estructura del repositorio o \n"
                        + "los metadatos no son los esperados.\nPor favor verifique.", "Error", JOptionPane.ERROR_MESSAGE);
                taConsola.append("Operación de filtrado cnacelada.\n");
                return;
            }
            //
            Recuperando filtro = new Recuperando(this, rootPaneCheckingEnabled);
            // seteamos el modelo del repositorio en el filtro
            filtro.setTree(jTree1.getModel());
            if (misMetadatos != null) {
                // seteamos la lista de metadatos en el filtro.
                filtro.setMetadatos(misMetadatos);
            } else {
                filtro.setMetadatos(new DefaultListModel());
            }
            filtro.setVisible(true);
            filtro.dispose();
        } catch (Exception ex) {
            Logger.getLogger(Depositando.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_mnuFiltrarActionPerformed

    private void btnObtenerItemsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObtenerItemsActionPerformed
        try {
            if ((coleccion != null) && (coleccion.isColeccion())) {
                RestControl rest = RestControl.getInstancia();
                DefaultListModel misItems = rest.obtenerItems(this.coleccion);
                if (!misItems.isEmpty()) {
                    listaItems.setModel(misItems);
                } else {
                    DefaultListModel<String> dlm = new DefaultListModel();
                    dlm.addElement("sin ítems");
                    listaItems.setModel(dlm);
                    taConsola.append("No hay datos de los items de la colección.\n");
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(Depositando.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnObtenerItemsActionPerformed

    private void listaItemsMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaItemsMousePressed
        this.item = (ItemRest) ((Object) listaItems.getSelectedValue());
        if ((item != null) && (item.isItem())) {
            RestControl rest = RestControl.getInstancia();
            DefaultListModel misItems = rest.obtenerBitstreams(this.item);
            if (!misItems.isEmpty()) {
                listaBitstreams.setModel(misItems);
            } else {
                DefaultListModel<String> dlm = new DefaultListModel();
                dlm.addElement("sin bitStreams");
                listaBitstreams.setModel(dlm);
                taConsola.append("No hay datos de los items de la colección.\n");
            }
        }
    }//GEN-LAST:event_listaItemsMousePressed

    private void cbOpcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbOpcionActionPerformed
        this.btnDepositar.setText((String) cbOpcion.getSelectedItem());
    }//GEN-LAST:event_cbOpcionActionPerformed

    private void listaOAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaOAMouseClicked

    }//GEN-LAST:event_listaOAMouseClicked

    private void btnObtenerMetasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObtenerMetasActionPerformed
        try {
            if (listaOA.getSelectedIndex() < 0) {
                return;
            }
            //Metadato dato = (Metadato) ((Object) listaOA.getSelectedValue());
            //
            taConsola.append("Chequeando los metadatos... por favor espere.\n");
            StardogControl base = StardogControl.getInstancia();
            //base.getMetadatos_v2(dato, evt); // mejorado.
            base.getMetadatos_v6(taConsola, evt); // mejorado.
            //            
            // Preseteamos el panel de captura con los metadatos obligatorios.
            taConsola.append("Preseteamos el panel de captura con los metadatos obligatorios.\n");
            JPanel unPanel = base.preSeteoPanelCaptura();
            // Seteamos los metadatos a cargar
            DefaultListModel misMetas = base.getListaMetadados();
            listaMetadato.setModel(misMetas);
            //
            captura.getViewport().setView(unPanel);
        } catch (Exception ex) {
            Logger.getLogger(Depositando.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnObtenerMetasActionPerformed

    private void btnRestablecerMetasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRestablecerMetasActionPerformed
        try {
            StardogControl base = StardogControl.getInstancia();
            if (base.estatus()) {
                this.misMetadatos.removeAllElements();
                base.getMetadatos_v6(this.taConsola, evt); // mejorado.
                //misMetadatos = base.getListaMetadados();
                base.ordenarMetadatos();
                //
                //seteamos los metadatos a cargar
                base.clearCapturaMetadatos();
                DefaultListModel misMetas = base.getListaMetadados();
                this.listaMetadato.setModel(misMetas);
            }
            //
            //habilitamos la lista de metadatos.
            //if (misMetadatos.size() > 0) {
            //    listaMetadato.setEnabled(true);
            //} else {
            //    listaMetadato.setEnabled(false);
            //}
        } catch (Exception ex) {
            Logger.getLogger(Depositando.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnRestablecerMetasActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Depositando.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Depositando.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Depositando.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Depositando.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Depositando().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddFichero;
    private javax.swing.JButton btnAgregarMetadato;
    private javax.swing.JButton btnDelFichero;
    private javax.swing.JButton btnDepositar;
    private javax.swing.JButton btnObtenerItems;
    private javax.swing.JButton btnObtenerMetas;
    private javax.swing.JButton btnRestablecerMetas;
    private javax.swing.JButton btnSalir;
    private javax.swing.JScrollPane captura;
    private javax.swing.JComboBox<String> cbOpcion;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JTree jTree1;
    private javax.swing.JList<String> listaBitstreams;
    private javax.swing.JList<String> listaItems;
    private javax.swing.JList<String> listaMetadato;
    private javax.swing.JList<String> listaOA;
    private javax.swing.JList<String> listaRecursos;
    private javax.swing.JPopupMenu miMenu;
    private javax.swing.JMenuItem mnuConectar;
    private javax.swing.JMenuItem mnuDeleteColeccion;
    private javax.swing.JMenuItem mnuDeleteComunidad;
    private javax.swing.JMenuItem mnuFiltrar;
    private javax.swing.JMenuItem mnuNewColeccion;
    private javax.swing.JMenuItem mnuNewComunidad;
    private javax.swing.JMenuItem mnuRefrescar;
    private javax.swing.JMenuItem mnuSalir;
    private javax.swing.JMenu mnuTool;
    private javax.swing.JPanel panelSur;
    private javax.swing.JPanel panel_central;
    private javax.swing.JPanel panel_inferior;
    private javax.swing.JPanel panel_superior;
    private javax.swing.JTextArea taConsola;
    // End of variables declaration//GEN-END:variables
}
