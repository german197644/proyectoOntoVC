/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Control.DialogWaitControler;
import Control.MetsDeposit;
import Control.RestControler;
import Control.SIPControler;
import Modelo.ComunidadRest;
import Modelo.ColeccionRest;
import java.io.IOException;
import java.io.File;

import org.jdom.Element;

import au.edu.apsr.mtk.base.*;
import com.google.gson.JsonArray;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonPrimitive;
import edu.harvard.hul.ois.mets.helper.MetsException;
import java.io.FileWriter;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.zip.Deflater;
import javax.swing.SwingWorker;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreeNode;
import javax.swing.tree.TreePath;

import org.json.simple.JSONArray;
import org.json.JSONException;
import org.json.simple.JSONObject;

/**
 *
 * @author germa
 */
public class prueba extends javax.swing.JFrame {

    /**
     * Creates new form prueba
     */
    MetsDeposit deposito;
    DefaultTreeModel modelo;

    private static METS mets = null;

    public prueba() {
        try {
            initComponents();
            setLocationRelativeTo(null);
            //this.setVisible(true);
            //login start
            Configurando login = new Configurando(this, true);
            login.setVisible(true);
        } catch (Exception ex) {
            Logger.getLogger(prueba.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MenuRepositorio = new javax.swing.JPopupMenu();
        mnuActualizar = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        mnuNewComunidad = new javax.swing.JMenuItem();
        mnuDeleteComunidad = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        mnuNewColeccion = new javax.swing.JMenuItem();
        mnuDeleteColeccion = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        mnuNewItem = new javax.swing.JMenuItem();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        txtComand = new javax.swing.JTextField();
        btnJson = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tree = new javax.swing.JTree();
        btnProcessBuilder = new javax.swing.JButton();
        txtSeleccionName = new javax.swing.JTextField();
        txtSeleccionLink = new javax.swing.JTextField();
        txtHost = new javax.swing.JTextField();
        btnDepositarBitStream = new javax.swing.JButton();
        btnNewItem = new javax.swing.JButton();
        btnSendMetadatos = new javax.swing.JButton();
        btnAutenticar = new javax.swing.JButton();
        btnAutenticar1 = new javax.swing.JButton();
        txtItem = new javax.swing.JTextField();
        btnComunidades = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnComunidades2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        mnuActualizar.setText("Actualizar Repositorio");
        mnuActualizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mnuActualizarMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                mnuActualizarMousePressed(evt);
            }
        });
        MenuRepositorio.add(mnuActualizar);
        MenuRepositorio.add(jSeparator2);

        mnuNewComunidad.setText("Crear Comunidad");
        MenuRepositorio.add(mnuNewComunidad);

        mnuDeleteComunidad.setText("Eliminar Comunidad");
        MenuRepositorio.add(mnuDeleteComunidad);
        MenuRepositorio.add(jSeparator1);

        mnuNewColeccion.setText("Crear Colección");
        MenuRepositorio.add(mnuNewColeccion);

        mnuDeleteColeccion.setText("Eliminar Colección");
        mnuDeleteColeccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuDeleteColeccionActionPerformed(evt);
            }
        });
        MenuRepositorio.add(mnuDeleteColeccion);
        MenuRepositorio.add(jSeparator3);

        mnuNewItem.setText("Exportar Item(s)");
        MenuRepositorio.add(mnuNewItem);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Depositar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("mets");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("METS 2");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Command_EXEC");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        btnJson.setText("Json Archivo");
        btnJson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnJsonActionPerformed(evt);
            }
        });

        tree.setComponentPopupMenu(MenuRepositorio);
        tree.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tree.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                treeMousePressed(evt);
            }
        });
        tree.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                treeValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(tree);

        btnProcessBuilder.setText("ProcessBuilder");
        btnProcessBuilder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcessBuilderActionPerformed(evt);
            }
        });

        txtHost.setText("http://localhost:8080");
        txtHost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHostActionPerformed(evt);
            }
        });

        btnDepositarBitStream.setText("Enviar bitStreams");
        btnDepositarBitStream.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDepositarBitStreamActionPerformed(evt);
            }
        });

        btnNewItem.setText("Crear New Item");
        btnNewItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewItemActionPerformed(evt);
            }
        });

        btnSendMetadatos.setText("Enviar Metadatos");

        btnAutenticar.setText("Login");
        btnAutenticar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAutenticarActionPerformed(evt);
            }
        });

        btnAutenticar1.setText("Logout");
        btnAutenticar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAutenticar1ActionPerformed(evt);
            }
        });

        txtItem.setText("/rest/items/5edb8150-b967-4431-a379-b9a4d12441c1");

        btnComunidades.setText("Comunidades");
        btnComunidades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnComunidadesActionPerformed(evt);
            }
        });

        jLabel1.setText("Nodo");

        jLabel2.setText("Link");

        jButton5.setText("Add Collecion");

        jLabel3.setText("URL");

        jLabel4.setText("Comando");

        btnComunidades2.setText("Comunidades2");
        btnComunidades2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnComunidades2ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addComponent(jButton3)
                            .addComponent(jButton2)
                            .addComponent(btnJson))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton4)
                                .addGap(45, 45, 45)
                                .addComponent(btnProcessBuilder)
                                .addGap(18, 18, 18)
                                .addComponent(btnComunidades)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnComunidades2)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtComand, javax.swing.GroupLayout.PREFERRED_SIZE, 589, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtHost, javax.swing.GroupLayout.PREFERRED_SIZE, 590, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtSeleccionLink))
                                    .addComponent(txtItem)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(btnNewItem)
                                                .addGap(18, 18, 18)
                                                .addComponent(btnDepositarBitStream)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(btnSendMetadatos))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(btnAutenticar)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(btnAutenticar1))
                                            .addComponent(jButton5))
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtSeleccionName)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnJson))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel3)
                            .addComponent(txtHost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel4)
                            .addComponent(txtComand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton4)
                            .addComponent(btnProcessBuilder)
                            .addComponent(btnComunidades)
                            .addComponent(btnComunidades2))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(txtSeleccionName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtSeleccionLink, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(txtItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAutenticar)
                            .addComponent(btnAutenticar1))
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnDepositarBitStream)
                            .addComponent(btnSendMetadatos)
                            .addComponent(btnNewItem))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton5))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            // TODO add your handling code here:
            deposito = new MetsDeposit();
            deposito.depositNew();
        } catch (Exception ex) {
            Logger.getLogger(prueba.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        String myObjID = "miMETS";
        final String ns = "http://purl.org/dc/elements/1.1/";
        try {
            // Create SIP; validate = false, ZIP compression = BEST_SPEED
            SIPControler sip = new SIPControler(false, Deflater.BEST_SPEED);
            // Optional: Set the METS OBJID
            sip.setOBJID(myObjID);

            // Optional: Set the METS creator
            sip.addAgent("CREATOR", "ORGANIZATION", "MyUniversity Libraries");

            // add content objects - last arg is "is Primary Bitstream"
            String dir = System.getProperty("java.io.tmpdir");
            sip.addBitstream(new File(dir + "/pdf1.pdf"), "pdf1.pdf", "ORIGINAL", false);

            //sip.addBitstream(new File("thesis102.doc"), "content/thesis.doc", "ORIGINAL", false);
            // add the descriptive metadata as JDOM Element; the package also
            // accepts a String of serialized XML or a file of any format.
            //Element modsElt = myMakeMetadata();
            List<Element> listE = new ArrayList<>();

            //Namespace nsProj = Namespace.getNamespace("dc", ns);                                   
            Element t = new Element("title", "dc", ns + "title");
            t.setText("Dia nublado para celebrar.");
            listE.add(t);
            Element ti = new Element("creator", "dc", ns + "creator");

            ti.setText("Pogliani, German Dario");
            listE.add(ti);
            sip.addDescriptiveMD("DC", listE, "Metadatos Dublin Core");

            // Write SIP to a file
            File outfile = File.createTempFile(myObjID, ".zip");
            sip.write(outfile);
        } catch (MetsException | IOException ex) {
            Logger.getLogger(prueba.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {
            // TODO add your handling code here:
            RestControler myRest = RestControler.getInstancia();
            myRest.comandoEXEC(txtComand.getText().trim());
        } catch (JSONException ex) {
            Logger.getLogger(prueba.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void btnJsonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnJsonActionPerformed

        FileWriter file = null;
        try {
            JSONArray list = new JSONArray();
            JSONObject obj = new JSONObject();
            JSONObject data = new JSONObject();
            obj.put("value", "Espero que salga");
            obj.put("key", "dc.title");
            list.add(obj);
            data.put("metadata", list);
            //----------------------------------------------------------
            file = new FileWriter(new File("e:\\data2.txt"));
            file.write(data.toJSONString());
            file.flush();
            file.close();
        } catch (IOException ex) {
            Logger.getLogger(prueba.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                file.close();
            } catch (IOException ex) {
                Logger.getLogger(prueba.class.getName()).log(Level.SEVERE, null, ex);
            }
        }


    }//GEN-LAST:event_btnJsonActionPerformed

    private void btnProcessBuilderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcessBuilderActionPerformed
        RestControler rest = RestControler.getInstancia();                ;
        modelo = rest.estructRepositorio(txtComand.getText().trim(), txtHost.getText().trim());
        tree.setModel(modelo);
        tree.updateUI();
        //String command = txtComand.getText();
        //Process process = Runtime.getRuntime().exec(command);
        //InputStream is = process.getInputStream();
        //InputStreamReader isr = new InputStreamReader(is);
        //BufferedReader br = new BufferedReader(isr);
        //String result = br.lines().collect(Collectors.joining("\n"));
        //System.out.println("Linea: "+ result);

        //JsonParser parser = new JsonParser();
        //JsonElement datos = parser.parse(result);
        //DefaultMutableTreeNode nodo = new DefaultMutableTreeNode("Repositorio");
        //modelo = new DefaultTreeModel(nodo);
        //modelo = dumpJSONElement2("", datos, "", modelo, nodo, 0);
    }//GEN-LAST:event_btnProcessBuilderActionPerformed

    private void treeValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_treeValueChanged
        TreePath path = evt.getPath();
        Object[] nodos = path.getPath();
        System.out.println("");
        System.out.println("----------------------------------------------");
        System.out.println("Path seleccionado: " + Arrays.toString(nodos));
        for (Object nodo : nodos) {
            System.out.print(nodo.toString() + " | ");
        }

        // Mirando el ultimo nodo del path, sabemos qué nodo en concreto
        // se ha seleccionado.
        DefaultMutableTreeNode ultimoNodo
                = (DefaultMutableTreeNode) nodos[nodos.length - 1];

        System.out.println("ultimo Nodo: " + ultimoNodo);
        if (ultimoNodo.isRoot()) {
            return;
        }

        System.out.println("ultimo Nodo: " + ultimoNodo.isLeaf());

        if (ultimoNodo.isLeaf() && ultimoNodo.getUserObject() instanceof ColeccionRest) {
            ColeccionRest col = (ColeccionRest) ultimoNodo.getUserObject();
            txtSeleccionName.setText(col.getNombre());
            txtSeleccionLink.setText(col.getLink());
        }
    }//GEN-LAST:event_treeValueChanged

    private void treeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_treeMousePressed
       // Se obtiene el path para esa fila. Con el path podemos obtener
        // los nodos.
        int selRow = tree.getRowForLocation(evt.getX(), evt.getY());
        System.out.println("Row: " + selRow);
        if (selRow < 0) {
            return;
        }

        //System.out.println("Path: " + selPath.toString());
        DefaultMutableTreeNode nodo = (DefaultMutableTreeNode) tree.
                getPathForLocation(evt.getX(), evt.getY()).getLastPathComponent();
        if (nodo.isLeaf()) {
            System.out.println("Es hoja: " + nodo.isLeaf());
        }

        if (nodo.getChildCount() > 0) {
            return;
        }

        /*if (nodo.getUserObject() instanceof ComunidadRest) {
            txtSeleccionName.setText(((ComunidadRest) nodo.getUserObject()).getNombre());
            txtSeleccionLink.setText(((ComunidadRest) nodo.getUserObject()).getLink());
            DefaultMutableTreeNode nuevaHoja = new DefaultMutableTreeNode(
                    "Hoja nueva" + nodo.getChildCount());
            nodo.add(nuevaHoja);
            tree.updateUI();
        }*/
        if (nodo.getUserObject() instanceof ComunidadRest) {
            txtSeleccionName.setText(((ComunidadRest) nodo.getUserObject()).getNombre());
            txtSeleccionLink.setText(((ComunidadRest) nodo.getUserObject()).getLink());
            ComunidadRest comunidad = (ComunidadRest) nodo.getUserObject();
            //nodo = comunidad.getComunidad(txtHost.getText(), nodo);
            //nodo = comunidad.getColeccion(txtHost.getText(), nodo);

            //tree.updateUI();
        }

        if (nodo.getUserObject() instanceof ColeccionRest) {
            txtSeleccionName.setText(((ColeccionRest) nodo.getUserObject()).getNombre());
            txtSeleccionLink.setText(((ColeccionRest) nodo.getUserObject()).getLink());
            // hacer algo
        } 
    }//GEN-LAST:event_treeMousePressed

    private void btnAutenticarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAutenticarActionPerformed
        try {
            RestControler rest = RestControler.getInstancia();
            boolean result = rest.conectar();
            System.out.println("conexion Rest: " + result);
        } catch (Exception ex) {
            Logger.getLogger(prueba.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnAutenticarActionPerformed

    private void txtHostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHostActionPerformed

    }//GEN-LAST:event_txtHostActionPerformed

    private void btnAutenticar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAutenticar1ActionPerformed
        try {
            RestControler rest = RestControler.getInstancia();
            boolean result = rest.desconectar();
            System.out.println("DesConexion rest: " + result);
        } catch (Exception ex) {
            Logger.getLogger(prueba.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAutenticar1ActionPerformed

    private void btnNewItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewItemActionPerformed
        RestControler rest = RestControler.getInstancia();
        //reemplazar por la que se selecciona en pantalla.
        String result = rest.newItem("/rest/collections/34368f6d-3a1b-4698-b064-1cf6e8e85df1");
        System.out.println(result);
    }//GEN-LAST:event_btnNewItemActionPerformed

    private void btnDepositarBitStreamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDepositarBitStreamActionPerformed
        RestControler rest = RestControler.getInstancia();
        String result = rest.sendBitstreams(txtItem.getText().trim(), "");
        System.out.println(result);
    }//GEN-LAST:event_btnDepositarBitStreamActionPerformed

    private void btnComunidadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnComunidadesActionPerformed
        DialogWaitControler wait = new DialogWaitControler(10);

        SwingWorker<Void, Integer> mySwingWorker = new SwingWorker<Void, Integer>() {            
            @Override
            protected Void doInBackground() throws Exception {

                //Here you put your long-running process...
                RestControler rest = RestControler.getInstancia();
                tree.setModel(rest.getComunidades(txtHost.getText(), txtComand.getText()));
                //tree.updateUI();  
                for (int i=1;i<11;i++){
                    publish(i);
                    Thread.sleep(1000);
                }
                wait.close();
                return null;
            }

            @Override
            protected void process(List<Integer> chunks) {
                wait.incrementarProBar(chunks.get(0));
            }
        };     
                               
        mySwingWorker.execute();
        wait.makeWait("Consultando las comunidades...", evt, 100);
        //---------------------------------------
    }//GEN-LAST:event_btnComunidadesActionPerformed

    private void mnuActualizarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mnuActualizarMousePressed
        int row = this.tree.getRowForLocation(evt.getX(), evt.getY());
        //tree.setSelectionRow(row);
        System.out.println("Mouse Pressed: " + row);
        TreePath path = tree.getSelectionPath();
        if (path != null){            
            DefaultMutableTreeNode obj = (DefaultMutableTreeNode) path.getLastPathComponent();
            System.out.println(path.toString());
            System.out.println("Clase: " + obj.getClass());            
            //System.out.println("Nodo Anterior: " + obj.getChildBefore(obj).toString());
            System.out.println("Objeto: " + obj.toString());
            if (obj.getUserObject() instanceof ComunidadRest){
                System.out.println("--- Es un obj comunidad."+ obj.getChildCount());
            }else if (obj.getUserObject() instanceof ColeccionRest){
                    System.out.println("--- Es un obj coleccion." + obj.getChildCount());
            } else{
                    System.out.println("--- Numero de filas."+ tree.getRowCount());
                    System.out.println("--- nro de filas del path."+ tree.getRowForPath(path));
                    System.out.println("--- fila en que estoy."+ tree.getRowForLocation(evt.getX(), evt.getY()));
                    DefaultMutableTreeNode nuevoNodo = new DefaultMutableTreeNode("nuevoNodo");
                    obj.add(nuevoNodo);
                    ((DefaultTreeModel)tree.getModel()).nodeStructureChanged((TreeNode) obj);
            }
                    
        }
        
    }//GEN-LAST:event_mnuActualizarMousePressed

    private void mnuActualizarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mnuActualizarMouseClicked
        int row = tree.getRowForLocation(evt.getX(), evt.getY());
        System.out.println("Mouse clicked: " + row);
    }//GEN-LAST:event_mnuActualizarMouseClicked

    private void btnComunidades2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnComunidades2ActionPerformed
        RestControler rest = RestControler.getInstancia();
        //rest.prueba(evt, jTextArea1);
        //DefaultTreeModel model = rest.obtenerComunidades(jTextArea1);
        rest.estructuraRepositorio(jTextArea1, tree);
        //tree.setModel(model);
    }//GEN-LAST:event_btnComunidades2ActionPerformed

    private void mnuDeleteColeccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuDeleteColeccionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mnuDeleteColeccionActionPerformed

    public static void dumpJSONElement(JsonElement elemento) {
        if (elemento.isJsonObject()) {
            System.out.println("Es objeto");
            JsonObject obj = elemento.getAsJsonObject();
            java.util.Set<java.util.Map.Entry<String, JsonElement>> entradas = obj.entrySet();
            java.util.Iterator<java.util.Map.Entry<String, JsonElement>> iter = entradas.iterator();
            while (iter.hasNext()) {
                java.util.Map.Entry<String, JsonElement> entrada = iter.next();
                System.out.println("Clave: " + entrada.getKey());
                System.out.println("Valor:");
                dumpJSONElement(entrada.getValue());
            }
        } else if (elemento.isJsonArray()) {
            JsonArray array = elemento.getAsJsonArray();
            System.out.println("Es array. Numero de elementos: " + array.size());
            java.util.Iterator<JsonElement> iter = array.iterator();
            while (iter.hasNext()) {
                JsonElement entrada = iter.next();
                dumpJSONElement(entrada);
            }
        } else if (elemento.isJsonPrimitive()) {
            System.out.println("Es primitiva");
            JsonPrimitive valor = elemento.getAsJsonPrimitive();
            if (valor.isBoolean()) {
                System.out.println("Es booleano: " + valor.getAsBoolean());
            } else if (valor.isNumber()) {
                System.out.println("Es numero: " + valor.getAsNumber());
            } else if (valor.isString()) {
                System.out.println("Es texto: " + valor.getAsString());
            }
        } else if (elemento.isJsonNull()) {
            System.out.println("Es NULL");
        } else {
            System.out.println("Es otra cosa");
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(prueba.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(prueba.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(prueba.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(prueba.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new prueba().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPopupMenu MenuRepositorio;
    private javax.swing.JButton btnAutenticar;
    private javax.swing.JButton btnAutenticar1;
    private javax.swing.JButton btnComunidades;
    private javax.swing.JButton btnComunidades2;
    private javax.swing.JButton btnDepositarBitStream;
    private javax.swing.JButton btnJson;
    private javax.swing.JButton btnNewItem;
    private javax.swing.JButton btnProcessBuilder;
    private javax.swing.JButton btnSendMetadatos;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JMenuItem mnuActualizar;
    private javax.swing.JMenuItem mnuDeleteColeccion;
    private javax.swing.JMenuItem mnuDeleteComunidad;
    private javax.swing.JMenuItem mnuNewColeccion;
    private javax.swing.JMenuItem mnuNewComunidad;
    private javax.swing.JMenuItem mnuNewItem;
    private javax.swing.JTree tree;
    private javax.swing.JTextField txtComand;
    private javax.swing.JTextField txtHost;
    private javax.swing.JTextField txtItem;
    private javax.swing.JTextField txtSeleccionLink;
    private javax.swing.JTextField txtSeleccionName;
    // End of variables declaration//GEN-END:variables
}
